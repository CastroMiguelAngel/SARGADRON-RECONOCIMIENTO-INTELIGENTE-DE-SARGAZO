import os
import cv2
import numpy as np
from tensorflow.keras.models import load_model
import mysql.connector

# Configuraci贸n de la base de datos
db_config = {
    'host': 'GQSERVER',
    'user': 'root',
    'port': '3307',
    'password': 's@rg@drone',
    'database': 'sargadrone'
}

carpetaImagenes = '..\..\Imagenes\Deteccion'
inputShape = (224, 224, 3)
model = load_model('modelo_sargazo.keras')

def predecirImagenesEnCarpeta(carpeta):
    listaImagenes = [imagen for imagen in os.listdir(carpeta) if imagen.endswith('.jpg')]

    # Establecer la conexi贸n con la base de datos
    conexion = mysql.connector.connect(**db_config)
    cursor = conexion.cursor()

    for imagen in listaImagenes:
        rutaImagen = os.path.join(carpeta, imagen)
        img = cv2.imread(rutaImagen)
        img = cv2.resize(img, (inputShape[0], inputShape[1]))
        img = np.expand_dims(img, axis=0)
        img = img.astype('float32') / 255.0
        prediccion = model.predict(img)
        
        sargazo_valor = int(prediccion[0][0] >= 0.5)  # Convertir a 0 o 1

        # Actualizar la columna 'sargazo' en la base de datos
        try:
            update_query = "UPDATE imagenes SET sargazo = %s WHERE nombre = %s"
            update_values = (sargazo_valor, imagen)
            cursor.execute(update_query, update_values)
            conexion.commit()
            print(f"Actualizaci贸n exitosa para {imagen}")
        except mysql.connector.Error as error:
            print(f"Error al actualizar {imagen}:", error)
            conexion.rollback()

    # Cerrar el cursor y la conexi贸n
    cursor.close()
    conexion.close()

predecirImagenesEnCarpeta(carpetaImagenes)